package Prueba;
public class App {
    public static void main(String[] args) throws Exception {
        //hacer que el programa corra las funcionalidades de la aplicacion
        //que cargue las tablas de la base de datos con las funciones de la clase MyConnection
        //que permita al usuario interactuar con la aplicacion
        //que permita al usuario realizar compras de criptomonedas
        //que permita al usuario ver el estado de su cartera
    	while(true) {
        System.out.println("Ingrese 1 si quiere utilizar el servicio de visualizacion de activos");
        System.out.println("Ingrese 2 si quiere comprar");
        System.out.println("Ingrese 3 si quiere utilizar el servicio de moneda");
        int respuesta = Interfaz.pedirInt();
        int segunda;
        switch(respuesta) {
        case 1:
        		ServicioActivos servicioActivos = new ServicioActivos();
        		System.out.println("Ingrese 1 si quiere visualizar todos los activos");
                System.out.println("Ingrese 2 si quiere ingresar un activo");
                segunda= Interfaz.pedirInt();
                switch(segunda) {
                	case 1:
                		servicioActivos.mostrarActivos();
                	break;
                	case 2:
                		servicioActivos.ingresarActivo();
                	break;
                }
        	break;
        case 2:
        	ServicioCompra servicioCompra= new ServicioCompra();
      		servicioCompra.comprar();
            break;
        case 3:	
        	ServicioMoneda servicioMoneda = new ServicioMoneda();
        	System.out.println("Ingrese 1 si quiere crear una moneda desde el usuario");
            System.out.println("Ingrese 2 si quiere imprimir las monedas ordenadas");
            System.out.println("Ingrese 3 si quiere imprimir el Stock ordenada");
            segunda= Interfaz.pedirInt();
            switch(segunda) {
            	case 1:
            		servicioMoneda.crearMonedaDesdeUsuario();
            	break;
            	case 2:
            		servicioMoneda.imprimirMonedasOrdenado();
            	break;
            	case 3:
            		servicioMoneda.imprimirStockOrdenado();
            	break;
            	default:
            }
        	
        }
        
        
    	}
    }
}
